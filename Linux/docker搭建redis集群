docker run -p 6379:6379 -v $PWD/data:/data  -d redis:3.2 redis-server --appendonly yes --logfile /var/log/redis/redis-server.log
# 命令说明：
-p 6379:6379 : 将容器的6379端口映射到主机的6379端口
-v $PWD/data:/data : 将主机中当前目录下的data挂载到容器的/data
redis-server --appendonly yes : 在容器执行redis-server启动命令，并打开redis持久化配置
--logfile /var/log/redis/redis-server.log ： 指定日志目录

# 查看容器启动情况
docker ps

# 连接、查看容器
docker exec -it 43f7a65ec7f8 redis-cli

# 访问redis日志
docker exec -it redis tail -f /var/log/redis/redis-server.log



##############################################################
##############################################################
##############################################################
#1 安装镜像
docker pull redis
docker pull ruby
docker images

#2 创建虚拟网卡
docker network create redis-net
docker network ls

#3 查看虚拟网卡网关IP
docker network inspect  redis-net  | grep "Gateway" |  grep --color=auto -P '(\d{1,3}.){3}\d{1,3}' -o

#4 创建配置文件模板
/home/redis-cluster/redis-cluster.tmpl

#5 创建节点配置文件
for port in `seq 7010 7015`
do
  mkdir -p ./${port}/conf \
  && PORT=${port} envsubst < ./redis-cluster.tmpl > ./${port}/conf/redis.conf \
  && mkdir -p ./${port}/data;
done

#6 验证上步
tree
vi 701*/conf/redis.conf

#7 启动redis节点容器
for port in $(seq 7010 7015)
do
    docker run -d -ti -p ${port}:${port} -p 1${port}:1${port} \ # 端口映射
--privileged=true -v /home/redis-cluster/${port}/conf/redis.conf:/usr/local/etc/redis/redis.conf \ # 目录挂载
--privileged=true -v /home/redis-cluster/${port}/data:/data \
--restart always --name redis-${port} --net redis-net \
--sysctl net.core.somaxconn=1024 redis redis-server /usr/local/etc/redis/redis.conf # 指定网络和配置文件
done


#8 查看容器分配ip
docker network inspect redis-net

#9 修改节点配置文件[本地]重启redis服务
vi  /home/redis-cluster/701*/conf/redis.conf # 编辑ip为查询分配的ip
for port in `seq 7010 7015`
do
  docker stop redis-${port}
  docker rm redis-${port}
  docker run -d -ti -p ${port}:${port} -p 1${port}:1${port} \
--privileged=true -v /home/redis-cluster/${port}/conf/redis.conf:/usr/local/etc/redis/redis.conf \
--privileged=true -v /home/redis-cluster/${port}/data:/data \
--restart always --name redis-${port} --net redis-net \
--sysctl net.core.somaxconn=1024 redis redis-server /usr/local/etc/redis/redis.conf
done

# 启动redis集群
root@awesome-debian:/home/redis-cluster# docker exec -it redis-7010 /bin/bash
root@47f5e0e28dc1:/data# redis-cli --cluster create 172.18.0.2:7010 172.18.0.3:7011 172.18.0.4:7012 172.18.0.5:7013 172.18.0.6:7014 172.18.0.7:7015 --cluster-replicas 1

